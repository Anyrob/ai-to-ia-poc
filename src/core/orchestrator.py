"""
Module responsible for executing the plan generated by the `PlanGenerator`
(`src/core/plan_generator.py`).
"""
class Orchestrator:
    """
    Class responsible for executing the generated plan by calling each of the
    models in the correct order, and returning the result.

    Attributes
    ----------
    plan :: (Dict[str, object]): The generated plan.
    """
    def __init__(self, plan):
        self.plan = plan

    def execute_plan(self):
        """Executes the plan and returns the result."""
        result = None

        for model in self.plan["model_sequence"]:
            model.execute(result)
            result = model.parse()

        return result
